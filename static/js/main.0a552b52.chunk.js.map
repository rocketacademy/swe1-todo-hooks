{"version":3,"sources":["theme.js","store.js","components/TodoCard.jsx","components/ScrollToTopButton.jsx","components/CreateTodoDialog.jsx","components/App.jsx","index.jsx"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","background","default","typography","fontFamily","h5","fontWeight","overrides","MuiButton","contained","boxShadow","label","textTransform","MuiCard","root","StoreContext","createContext","StoreProvider","children","useState","openModal","setOpenModal","id","Date","getTime","title","description","done","store","todos","setTodos","Provider","value","useStyles","makeStyles","createStyles","opacity","props","width","maxWidth","TodoCard","body","classes","useContext","Card","className","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","onClick","map","todo","size","filter","position","bottom","spacing","right","ScrollTop","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","ScrollToTopButton","Fab","aria-label","CreateTodoDialog","titleEl","useRef","descriptionEl","handleClose","handleSubmit","console","log","current","push","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","inputRef","margin","placeholder","onSubmit","DialogActions","flexGrow","marginLeft","marginRight","breakpoints","up","appBar","paddingLeft","paddingRight","toolbar","marginTop","marginBottom","App","useTheme","isMobileView","useMediaQuery","only","useEffect","AppBar","Toolbar","Grid","container","item","direction","key","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.0a552b52.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core'\n\n// Mostly using the default theme without personalisation.\n// Any personalisation will be added inside the object passed to `createMuiTheme`.\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      background: {\n        default: '#F0F0F0',\n      },\n    },\n    typography: {\n      fontFamily: 'Avenir',\n      h5: {\n        fontWeight: 600,\n      },\n    },\n    overrides: {\n      MuiButton: {\n        contained: {\n          boxShadow: 'none',\n          '&:hover': {\n            boxShadow: 'none',\n          },\n        },\n        label: {\n          fontWeight: 600,\n          textTransform: 'none',\n        },\n      },\n      MuiCard: {\n        root: {\n          boxShadow: '0 0 10px gray',\n        },\n      },\n    },\n  }),\n)\n\nexport default theme\n","import React, { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// Will be referenced by components to access data store.\nexport const StoreContext = createContext(null)\n\n// Helper container component to wrap store into root of our component tree.\nexport const StoreProvider = ({ children }) => {\n  // Used to control our create todo modal.\n  const [openModal, setOpenModal] = useState(false)\n\n  // Used to store and modify our todo items.\n  const [todos, setTodos] = useState([\n    {\n      // Each todo is uniquely identified by the time they are created.\n      id: new Date().getTime(),\n      title: 'Create your first todo',\n      description:\n        'Create your first todo by clicking on the button located on the top-right.',\n      done: false,\n    },\n  ])\n\n  const store = {\n    openModal,\n    setOpenModal,\n    todos,\n    setTodos,\n  }\n\n  return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n\nStoreProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default StoreContext\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n} from '@material-ui/core'\nimport StoreContext from '../store'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      opacity: (props) => (props.done ? 0.35 : 1),\n      width: 345,\n      maxWidth: '100%',\n    },\n  }),\n)\n\nexport default function TodoCard({ id, title, body, done }) {\n  const classes = useStyles({ done })\n  const { todos, setTodos } = useContext(StoreContext)\n\n  // Toggles the done status of this todo item.\n  const toggleDoneStatus = () => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, done: !todo.done }\n        }\n        return { ...todo }\n      }),\n    )\n  }\n\n  // Removes this todo item from the list of todo items.\n  const deleteTodo = () => {\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={toggleDoneStatus} size=\"small\" color=\"primary\">\n          {done ? 'Done' : 'Mark as done'}\n        </Button>\n        <Button onClick={deleteTodo} size=\"small\" color=\"secondary\">\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nTodoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Fab from '@material-ui/core/Fab'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport Zoom from '@material-ui/core/Zoom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nfunction ScrollTop(props) {\n  const { children, window } = props\n  const classes = useStyles()\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  })\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor',\n    )\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  )\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n}\n\nconst ScrollToTopButton = (props) => {\n  return (\n    <ScrollTop {...props}>\n      <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll to top\">\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </ScrollTop>\n  )\n}\n\nexport default ScrollToTopButton\n","import React, { useContext, useRef } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core'\nimport StoreContext from '../store'\n\nconst CreateTodoDialog = () => {\n  const { openModal, setOpenModal, todos, setTodos } = useContext(StoreContext)\n  const titleEl = useRef(null)\n  const descriptionEl = useRef(null)\n\n  const handleClose = () => setOpenModal(false)\n\n  const handleSubmit = () => {\n    console.log(titleEl)\n    const todo = {\n      id: new Date().getTime(),\n      title: titleEl.current.value\n        ? titleEl.current.value\n        : 'The nameless todo',\n      description: descriptionEl.current.value\n        ? descriptionEl.current.value\n        : 'This todo item does not have a body.',\n      done: false,\n    }\n    todos.push(todo)\n    setTodos(todos)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={openModal}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"sm\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a new Todo item</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Title</DialogContentText>\n          <TextField\n            autoFocus\n            inputRef={titleEl}\n            margin=\"dense\"\n            id=\"title\"\n            placeholder=\"Title of your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogContent>\n          <DialogContentText>Description</DialogContentText>\n          <TextField\n            inputRef={descriptionEl}\n            margin=\"dense\"\n            id=\"body\"\n            placeholder=\"Describe your todo item\"\n            onSubmit={handleSubmit}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default CreateTodoDialog\n","import React, { useContext, useEffect } from 'react'\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n  createStyles,\n  makeStyles,\n  Grid,\n  useTheme,\n  useMediaQuery,\n} from '@material-ui/core'\nimport TodoCard from './TodoCard'\nimport ScrollToTopButton from './ScrollToTopButton'\nimport CreateTodoDialog from './CreateTodoDialog'\nimport StoreContext from '../store'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4),\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(6),\n        marginRight: theme.spacing(6),\n      },\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(8),\n      },\n    },\n    appBar: {\n      boxShadow: 'none',\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    toolbar: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    body: {},\n  }),\n)\n\nconst App = () => {\n  // Used to control our create todo modal.\n  const classes = useStyles()\n  const { setOpenModal, todos } = useContext(StoreContext)\n  const theme = useTheme()\n  const isMobileView = useMediaQuery(theme.breakpoints.only('xs'))\n\n  useEffect(() => {\n    // Any updates to the backend should come here.\n    // Backend is not implemented in this todo version.\n  }, [])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar\n          className={classes.appBar}\n          position=\"static\"\n          color=\"transparent\"\n        >\n          <Toolbar id=\"back-to-top-anchor\" className={classes.toolbar}>\n            <Typography variant=\"h5\" className={classes.title}>\n              Todo App\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => setOpenModal(true)}\n              color=\"primary\"\n              size=\"large\"\n            >\n              Create Todo\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <ScrollToTopButton />\n        <Grid container spacing={4}>\n          {todos.map((todo) => (\n            <Grid item direction={isMobileView ? 'row' : 'column'}>\n              <TodoCard\n                key={todo.id}\n                id={todo.id}\n                title={todo.title}\n                body={todo.description}\n                done={todo.done}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      {/* Relevant modals. */}\n      <CreateTodoDialog />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport theme from './theme'\nimport { StoreProvider } from './store'\nimport App from './components/App'\n\ndocument.title = 'Todo App'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <StoreProvider>\n      <CssBaseline />\n      <App />\n    </StoreProvider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}